<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.codearena.Chatting.mapper.BattingMapper">

    <resultMap id="batCount" type="batPlayerCountDto">
        <result column="player1_coin" property="player1Count"/>
        <result column="player2_coin" property="player2Count"/>
    </resultMap>

    <resultMap id="userCoins" type="batUserCoinDto">
        <result column="bat_user_id" property="userId"/>
        <result column="bat_coin" property="userCoin"/>
    </resultMap>

    <resultMap id="maxBatter" type="maxBatUserInfoDto">
        <result column="batterNickname" property="userNickname"/>
        <result column="bat_coin" property="userCoin"/>
    </resultMap>
    
    <sql id="isWin">
        <if test='winner != null and winner != ""'>
            AND bat_player_id = (SELECT user_id FROM user WHERE user_nickname = #{winner})
        </if>
    </sql>

    <!-- 유저 코인 조회 쿼리 -->
    <select id="getUserCoin" parameterType="string" resultType="int">
        SELECT user_coin
        FROM user
        WHERE user_id = #{userId};
    </select>

    <!-- 유저 코인 변동 + 적용 쿼리 -->
    <update id="updateUserPlusCoin" parameterType="string">
        <selectKey order="BEFORE" keyColumn="user_coin" resultType="int" keyProperty="userCoin">
            SELECT user_coin
            FROM user
            WHERE user_id = #{userId}
        </selectKey>
        UPDATE user
        SET user_coin = #{userCoin} + ${coin}
        WHERE user_id = #{userId};
    </update>

    <!-- 유저 코인 변동 적용 쿼리 -->
    <update id="updateUserCoin" parameterType="string">
        UPDATE user
        SET user_coin = #{coin}
        WHERE user_id = #{userId};
    </update>

    <!-- 배팅 적용 쿼리 -->
    <insert id="batPlayer" parameterType="map">
        INSERT INTO batting(game_id, bat_user_id, bat_player_id, bat_coin, bat_date)
        VALUES(#{gameId}, #{userId}, #{playerId}, #{batCoin}, now());
    </insert>

    <!-- 각 플레이어에게 투자한 사람의 인원 조회 쿼리 -->
    <select id="getPlayerCount" parameterType="map" resultMap="batCount">
        SELECT (SELECT COUNT(bat_player_id) FROM batting WHERE game_id = #{gameId} AND bat_player_id = #{player1Id}) as player1_coin
        , (SELECT COUNT(bat_player_id) FROM batting WHERE game_id = #{gameId} AND bat_player_id = #{player2Id}) as player2_coin;
    </select>

    <!-- 특정 승자에 대해 배팅한 유저들의 ID, Coin 조회 쿼리 -->
    <select id="getUserBatCoin" parameterType="string" resultMap="userCoins">
        SELECT bat_user_id, bat_coin
        FROM batting
        <where>
            game_id = #{gameId}
            <include refid="isWin"></include>
        </where>
    </select>

    <!-- 특정 게임, 특정 유저에게 최고 금액을 건 유저 1명 조회 쿼리 -->
    <select id="getMaxBatUser" parameterType="string" resultMap="maxBatter">
        SELECT (SELECT user_nickname FROM user WHERE user_id = bat_user_id) as batterNickname, bat_coin
        FROM batting
        WHERE game_id = #{gameId} AND bat_player_id = #{playerId}
        ORDER BY bat_coin DESC, bat_date ASC LIMIT 1;
    </select>

    <!-- 특정 게임, 특정 유저에게 배팅을 한 사람의 총합 조회 쿼리 -->
    <select id="getPlayerSumPeople" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM batting
        WHERE game_id = #{gameId} AND bat_player_id = #{playerId}
    </select>

    <!-- 배팅 시도횟수 조회 -->
    <select id="getUserBatStatus" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM batting
        WHERE game_id = #{gameId} AND bat_user_id = #{userId}
    </select>

</mapper>