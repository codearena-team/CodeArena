<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.codearena.Chatting.mapper.RestMapper">

    <resultMap id="playerData" type="gamePlayerDto">
        <result property="userId" column="user_id"/>
        <result property="userNickname" column="user_nickname"/>
        <result property="effRating" column="effi_rating"/>
        <result property="speedRating" column="speed_rating"/>
        <result property="point" column="user_coin"/>
    </resultMap>

    <resultMap id="playerAllData" type="gamePlayerDto">
        <result property="userId" column="user_id"/>
        <result property="userNickname" column="user_nickname"/>
        <result property="effRating" column="effi_rating"/>
        <result property="speedRating" column="speed_rating"/>
        <association property="record" column="userId=user_id" javaType="userRecordDto" select="selectUserRecord"/>
        <collection property="recentMatches" column="userId=user_id" ofType="GameRecordDto" select="selectRecentMatchInfo"/>
    </resultMap>

    <resultMap id="userData" type="userDto">
        <result property="userId" column="user_id"/>
        <result property="userNickname" column="user_nickname"/>
    </resultMap>

    <resultMap id="playerRecord" type="userRecordDto">
        <result property="defeatCount" column="defeat_count"/>
        <result property="winCount" column="win_count"/>
        <result property="drawCount" column="draw_count"/>
    </resultMap>

    <resultMap id="gameRecords" type="gameRecordDto">
        <result property="gameId" column="game_id"/>
        <result property="problemId" column="problem_id"/>
        <result property="problemTitle" column="problem_title"/>
        <result property="player1" column="player1"/>
        <result property="player2" column="player2"/>
        <result property="player3" column="player3"/>
        <result property="player4" column="player4"/>
        <result property="gameMode" column="game_mode"/>
        <result property="winner" column="winner"/>
        <result property="roomType" column="room_type"/>
    </resultMap>

    <resultMap id="gameInfo" type="CompetitiveResultDto">
        <result column="problem_id" property="problemId"/>
        <result column="game_title" property="gameTitle"/>
        <result column="player1Ssumnail" property="player1Ssumnail"/>
        <result column="player2Ssumnail" property="player2Ssumnail"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="game_mode" property="gameMode"/>
        <result column="game_language" property="gameLang"/>
        <result column="winner" property="winner"/>
        <result column="room_type" property="roomType"/>
        <result column="player1" property="player1Id"/>
        <result column="player2" property="player2Id"/>
    </resultMap>

    <resultMap id="playerInfo" type="competitiveUserInfoDto">
        <result column="user_nickname" property="userNickname"/>
        <result column="user_thumbnail" property="userSsumnail"/>
        <result column="user_rating" property="userRating"/>
    </resultMap>

    <resultMap id="submit" type="CompetitiveGameSubmitDto">
        <result column="submit_no" property="submitNo"/>
        <result column="users" property="userId"/>
        <result column="user_nickname" property="userNickname"/>
        <result column="problem_id" property="problemId"/>
        <result column="game_type" property="gameType"/>
        <result column="submit_lang" property="submitLang"/>
        <result column="submit_status" property="submitStatus"/>
        <result column="time_complexity" property="timeComplexity"/>
        <result column="memory" property="memory"/>
        <result column="submit_date" property="submitDate"/>
    </resultMap>

    <!--> 검색조건에 관한 동적쿼리문 -->
    <sql id="search">
        <if test='word != null and word != ""'>
            <if test='key != null and key != ""'>
                AND ${key} = #{word}
            </if>
        </if>
    </sql>

    <insert id="insertSubmit" parameterType="submitDto">
        insert into
            arena_submit_status
        (user_id, game_id, problem_id, submit_lang, code, submit_status)
        values(
            '${userId}', '${gameId}', '${problemId}', '${submitLang}', #{code}, '${submitStatus}'
        )
        <selectKey keyProperty="submitNo" resultType="String" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>

    <select id="getEffRankingbyRating" resultMap="playerData">
        select user_id, user_nickname, effi_rating from user where user_id != 1 order by effi_rating desc, user_id asc limit 0, 5;
    </select>

    <select id="getSpeedRankingByRating" resultMap="playerData">
        select user_id, user_nickname, speed_rating from user where user_id != 1 order by speed_rating desc, user_id asc limit 0, 5;
    </select>

    <select id="getPointRankingByPoint" resultMap="playerData">
        select user_id, user_nickname, user_coin from user where user_id !=1 order by user_coin desc, user_id asc limit 0, 5;

    </select>

    <select id="getUserRecordByUserId" resultMap="playerAllData" parameterType="String">
        select user_id, user_nickname, effi_rating, speed_rating from user where user_id=${userId}
    </select>

    <select id="selectUserRecord" resultMap="playerRecord">
        SELECT (SELECT count(*) from arena_record where (player1=${userId} or player2=${userId} or player3=${userId} or player4=${userId}) and winner!=${userId} and end_time is not null) as defeat_count,
            (SELECT count(*)FROM arena_record WHERE winner = ${userId} and end_time is not null) as win_count,
        (SELECT count(*) from arena_record where (player1=${userId} or player2=${userId} or player3=${userId} or player4=${userId}) and winner IS NULL and end_time is not null) as draw_count LIMIT 1;
    </select>

    <select id="selectRecentMatchInfo" resultMap="gameRecords">
        select game_id, a.problem_id as problem_id, problem_title, (select user_nickname as player1 from user where player1=user_id) as player1,
               (select user_nickname as player2 from user where player2=user_id) as player2,
               (select user_nickname as player3 from user where player3=user_id) as player3,
               (select user_nickname as player4 from user where player4=user_id) as player4,
               game_mode,
               (select user_nickname as winner from user where winner=user_id) as winner
                , room_type from arena_record a inner join ps_list p on a.problem_id = p.problem_id
        where (player1=${userId} or player2=${userId} or player3=${userId} or player4 =${userId}) and end_time is not null order by start_time desc limit 0, 5;
    </select>

    <select id="getGameInfo" parameterType="string" resultMap="gameInfo">
        SELECT problem_id, game_title, player1, player2, (SELECT user_thumbnail FROM user WHERE user_id = player1) as player1Ssumnail, (SELECT user_thumbnail FROM user WHERE user_id = player2) as player2Ssumnail, start_time, end_time, game_mode, game_language, winner, room_type
        FROM arena_record
        WHERE game_id = #{gameId}
    </select>

    <select id="getPlayerInfo" parameterType="string" resultMap="playerInfo">
        <if test='gameMode == "0"'>    <!-- 스피드전 -->
            SELECT user_nickname, speed_rating as user_rating, user_thumbnail
        </if>
        <if test='gameMode == "1"'>    <!-- 효율전 -->
            SELECT user_nickname, effi_rating as user_rating, user_thumbnail
        </if>
        FROM user
        WHERE user_id = #{userId};
    </select>

    <select id="getEffiSubmitList" parameterType="map" resultMap="submit">
        SELECT submit_no, user_id as users, (SELECT user_nickname FROM user WHERE user_id = users) as user_nickname, problem_id, game_type, submit_lang, submit_status, time_complexity, memory, submit_date
        FROM codearena.arena_submit_status
        <where>
            game_id = #{gameId}
            <include refid="search"></include>
        </where>
        ORDER BY submit_date DESC
        LIMIT ${start}, ${listSize}
    </select>

    <select id="getTotalSubmitCount" parameterType="map" resultType="int">
        SELECT COUNT(submit_no)
        FROM codearena.arena_submit_status
        <where>
            <include refid="search"></include>
        </where>
    </select>
</mapper>