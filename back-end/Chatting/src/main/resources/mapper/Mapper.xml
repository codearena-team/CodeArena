<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.codearena.Chatting.mapper.GameMapper">

    <resultMap id="gameDetailInfo" type="GameInfoDto">
        <result column="game_id" property="gameId"/>
        <result column="game_title" property="title"/>
        <result column="player1" property="userRed"/>
        <result column="player2" property="userBlue"/>
        <result column="player1_nickname" property="userRedNickname"/>
        <result column="player2_nickname" property="userBlueNickname"/>
        <result column="player1_thumbnail" property="userRedSsumnail"/>
        <result column="player2_thumbnail" property="userBlueSsumnail"/>
        <result column="player1_speed_rating" property="userRedSpeedRating"/>
        <result column="player2_speed_rating" property="userBlueSpeedRating"/>
        <result column="player1_effi_rating" property="userRedEffiRating"/>
        <result column="player2_effi_rating" property="userBlueEffiRating"/>
        <result column="problem_id" property="problemId"/>
        <result column="game_mode" property="gameMode"/>
        <result column="start_time" property="startTime"/>
        <result column="game_language" property="language"/>
        <result column="room_type" property="roomType"/>
    </resultMap>

    <resultMap id="gameInfo" type="GameInfoDto">
        <result column="game_id" property="gameId"/>
        <result column="game_title" property="title"/>
        <result column="player1" property="userRed"/>
        <result column="player2" property="userBlue"/>
        <result column="problem_id" property="problemId"/>
        <result column="game_mode" property="gameMode"/>
        <result column="start_time" property="startTime"/>
        <result column="game_language" property="language"/>
        <result column="room_type" property="roomType"/>
    </resultMap>

    <resultMap id="winnerInfo" type="WinnerInfoDto">
        <result column="userId" property="userId"/>
        <result column="user_nickname" property="userNickname"/>
    </resultMap>

    <resultMap id="userInfo" type="CompetitiveUserInfoDto">
        <result column="user_nickname" property="userNickname"/>
        <result column="user_thumbnail" property="userSsumnail"/>
        <result column="user_rating" property="userRating"/>
    </resultMap>

    <resultMap id="submit" type="CompetitiveGameSubmitDto">
        <result column="submit_no" property="submitNo"/>
        <result column="users" property="userId"/>
        <result column="user_nickname" property="userNickname"/>
        <result column="problem_id" property="problemId"/>
        <result column="game_type" property="gameType"/>
        <result column="submit_lang" property="submitLang"/>
        <result column="submit_status" property="submitStatus"/>
        <result column="time_complexity" property="timeComplexity"/>
        <result column="memory" property="memory"/>
        <result column="submit_date" property="submitDate"/>
    </resultMap>

    <!-- 검색조건 동적쿼리(닉네임, 문제번호, 방 제목 -->
    <sql id="search">
        <if test='word != null and word != ""'>
            <if test='key != null and key != ""'>
                <if test='key == "userNickname"'>
                    AND (player1 IN (SELECT user_id FROM user WHERE user_nickname LIKE CONCAT('%', #{word}, '%')) or player2 IN (SELECT user_id FROM user WHERE user_nickname LIKE CONCAT('%', #{word}, '%')) or player3 IN (SELECT user_id FROM user WHERE user_nickname LIKE CONCAT('%', #{word}, '%')) or player4 IN (SELECT user_id FROM user WHERE user_nickname LIKE CONCAT('%', #{word}, '%')))
                </if>
                <if test='key == "problem_id"'>
                    AND ${key} = #{word}
                </if>
                <if test='key == "game_title"'>
                    AND ${key} LIKE CONCAT('%', #{word}, '%')
                </if>
            </if>
        </if>
    </sql>
    <!-- 게임모드 동적쿼리 -->
    <sql id="mode">
        <if test='gameMode != null and gameMode != ""'>
            AND game_mode = #{gameMode}
        </if>
    </sql>
    <!-- 정렬조건 동적쿼리 -->
    <sql id="sort">
        <if test='sortType == null or sortType == ""'>
            ORDER BY start_time DESC
        </if>
        <if test="sortType == 'old'">
            ORDER BY start_time ASC
        </if>
    </sql>

    <!-- 언어 동적쿼리 -->
    <sql id="lang">
        <if test='langType != null and langType != ""'>
            AND game_language LIKE CONCAT('%', #{langType}, '%')
        </if>
    </sql>

    <!-- 승자 판단 동적쿼리-->
    <sql id="winner">
        <if test='winner != null and winner != ""'>
            , winner = (SELECT user_id FROM user WHERE user_nickname = #{winner})
        </if>
    </sql>

    <!-- 레이팅 조회 동적쿼리 -->
    <sql id="rating">
        <if test='gamemode == "0"'>
            SELECT speed_rating
        </if>
        <if test='gamemode == "1"'>
            SELECT effi_rating
        </if>
    </sql>

    <!-- gameMode SET 동적쿼리 -->
    <sql id="modeset">
        <if test='gamemode == "0"'>
            speed_rating = #{rating}
        </if>
        <if test='gamemode == "1"'>
            effi_rating = #{rating}
        </if>
    </sql>

    <!-- roomType SET 동적쿼리 -->
    <sql id="room">
    <if test='roomType != null and roomType != ""'>
        AND room_type = #{roomType}
    </if>

    </sql>

    <!-- 랜덤 문제번호 조회 -->
    <select id="findProblemById" resultType="int">
        SELECT problem_id
        FROM codearena.ps_list
        WHERE problem_visibility = 1
        ORDER BY RAND() LIMIT 1;
    </select>
    <!-- 특정 게임방 조회 -->
    <select id="findRoomById" parameterType="string" resultMap="gameDetailInfo">
            SELECT game_id, game_title, player1, player2, (SELECT user_nickname FROM user WHERE user_id = player1) as player1_nickname, (SELECT user_nickname FROM user WHERE user_id = player2) as player2_nickname, (SELECT user_thumbnail FROM user WHERE user_id = player1) as player1_thumbnail, (SELECT user_thumbnail FROM user WHERE user_id = player2) as player2_thumbnail, (SELECT speed_rating FROM user WHERE user_id = player1) as player1_speed_rating, (SELECT speed_rating FROM user WHERE user_id = player2) as player2_speed_rating, (SELECT effi_rating FROM user WHERE user_id = player1) as player1_effi_rating, (SELECT effi_rating FROM user WHERE user_id = player2) as player2_effi_rating, problem_id, start_time, game_mode, game_language
        FROM arena_record
        WHERE game_id = #{gameId};
    </select>
    <!-- 경쟁 게임방 생성 -->
    <insert id="createCompetitiveRoom" parameterType="gameCreateDto">
        INSERT INTO arena_record(game_id, game_title, player1, player2, problem_id, game_mode, game_language, room_type)
        VALUES(#{gameId}, #{title}, #{userRed}, #{userBlue}, #{problemId}, #{gameMode}, #{language}, #{roomType});
    </insert>

    <!-- 사설 게임방 생성 -->
    <insert id="createPrivateRoom" parameterType="privateGameCreateDto">
        INSERT INTO arena_record(game_id, game_title, player1, game_mode, game_language, room_type)
        VALUES(#{gameId}, #{title}, #{userId}, #{gameMode}, #{language}, #{roomType});
    </insert>

    <!-- 게임방 목록 조회 -->
    <select id="findAllRoom" parameterType="map" resultMap="gameInfo">
        SELECT game_id, game_title, (SELECT user_nickname FROM user WHERE user_id = player1) as player1,(SELECT user_nickname FROM user WHERE user_id = player2) as player2, problem_id, start_time, game_mode, game_language, room_type
        FROM arena_record
        <where>
            end_time IS NULL
            <include refid="mode"/>
            <include refid="lang"/>
            <include refid="search"/>
            <include refid="room"/>
        </where>
        <include refid="sort"/>
        LIMIT ${start}, ${listSize};
    </select>

    <!-- 페이지 개수 조회 -->
    <select id="getTotalGameCount" parameterType="map" resultType="int">
        select count(game_id)
        from arena_record
        <where>
            end_time IS NULL
            <include refid="mode"/>
            <include refid="lang"/>
            <include refid="search"/>
            <include refid="room"/>
        </where>
    </select>

    <update id="terminateGame" parameterType="string">
        UPDATE arena_record
        <set>
            end_time = now()
            <include refid="winner"></include>
        </set>
        WHERE game_id = #{gameId};
    </update>

    <select id="passProblem" parameterType="string" resultType="int">
        SELECT COUNT(DISTINCT(user_id))
        FROM arena_submit_status
        WHERE game_id = #{gameId} AND (user_id = #{player1} OR user_id = #{player2}) AND submit_status = '맞았습니다.';
    </select>

    <select id="winnerSearch" parameterType="string" resultMap="winnerInfo">
        SELECT user_id as userId, (SELECT user_nickname FROM user WHERE user_id = userId) as user_nickname
        FROM arena_submit_status
        WHERE game_id = #{gameId} AND submit_status = '맞았습니다.'
        ORDER BY time_complexity ASC , submit_date ASC LIMIT 1;
    </select>

    <select id="isRating" parameterType="map" resultType="int">
        <include refid="rating"></include>
        FROM user
        WHERE user_id = #{player}
    </select>

    <update id="refreshRating" parameterType="string">
        UPDATE user
        <set><include refid="modeset"></include></set>
        WHERE user_id = #{userId};
    </update>

    <select id="getUserInfo" parameterType="string" resultMap="userInfo">
        <if test='gamemode == "0"'>
            SELECT user_nickname, speed_rating as user_rating, user_thumbnail
        </if>
        <if test='gamemode == "1"'>
            SELECT user_nickname, effi_rating as user_rating, user_thumbnail
        </if>
        FROM user
        WHERE user_id = #{userId};
    </select>

    <update id="startPrivateGame" parameterType="map">
        UPDATE arena_record
        SET problem_id = #{problemId}, player2 = #{player2}, player3 = #{player3}, player4 = #{player4}, start_time = now()
        WHERE game_id = #{gameId};
    </update>

    <select id="whoWinner" parameterType="string" resultType="competitiveWinnerInfoDto">
        SELECT player1, player2, winner, game_mode
        FROM arena_record
        WHERE game_id = #{gameId};
    </select>

    <select id="getSubmitList" parameterType="string" resultMap="submit">
        SELECT submit_no, user_id as users, (SELECT user_nickname FROM user WHERE user_id = users) as user_nickname, problem_id, game_type, submit_lang, submit_status, time_complexity, memory, submit_date
        FROM codearena.arena_submit_status
        WHERE game_id = #{gameId};
    </select>

    <select id="getUserNickname" parameterType="string" resultType="string">
        SELECT user_nickname
        FROM user
        WHERE user_id = #{userId};
    </select>

    <select id="getStartTime" parameterType="string" resultType="string">
        SELECT start_time
        FROM arena_record
        WHERE game_id = #{gameId};
    </select>

</mapper>